// START: have webapp folder available during rollout
apply plugin: 'application'
applicationDistribution.into('WebContent') {
    from ('src/main/webapp')
}
startScripts << {
    unixScript.text = unixScript.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/WebContent:')
    windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=$APP_HOME\\WebContent;')
}
// END: have webapp folder available during rollout

ext {
    dbUnitVersion = "2.5.1"
    springTestDbunitVersion = "1.2.1"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework.session:spring-session:1.1.0.BUILD-SNAPSHOT")
    compile("org.springframework.data:spring-data-redis:1.7.0.BUILD-SNAPSHOT")
    compile("redis.clients:jedis:2.8.0")

    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.cloud:spring-cloud-starter-security")
    compile("org.springframework.cloud:spring-cloud-starter-oauth2")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.springframework.security:spring-security-jwt")

    compile("org.springframework.boot:spring-boot-starter-freemarker")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime("mysql:mysql-connector-java")
    compile("org.flywaydb:flyway-core");

    compile("org.apache.commons:commons-lang3:3.0")
    compile("joda-time:joda-time")
    compile("javax.mail:mail:1.4.7")

    testCompile("org.dbunit:dbunit:${dbUnitVersion}")
    testCompile("com.github.springtestdbunit:spring-test-dbunit:${springTestDbunitVersion}")
}
