// START: have webapp folder available during rollout
apply plugin: 'application'
applicationDistribution.into('WebContent') {
    from ('src/main/webapp')
}
startScripts << {
    unixScript.text = unixScript.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/WebContent:')
    windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=$APP_HOME\\WebContent;')
}
// END: have webapp folder available during rollout

ext {
    vaadinVersion = "7.6.0.beta1"
    vaadinSpringBootVersion = "1.0.0"
}

repositories {
    maven { url 'https://maven.vaadin.com/vaadin-prereleases' }
    maven { url 'http://www.jdal.org/repo' }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

dependencies {
    compile("com.vaadin:vaadin-spring-boot-starter:${vaadinSpringBootVersion}")

    compile("org.springframework.cloud:spring-cloud-starter-hystrix:")
    compile("org.springframework.cloud:spring-cloud-starter-bus-amqp")
    compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp:1.0.3.RELEASE")

    compile("org.springframework.boot:spring-boot-starter-hateoas")

    compile("org.springframework.session:spring-session:1.1.0.BUILD-SNAPSHOT")
    compile("org.springframework.data:spring-data-redis:1.7.0.BUILD-SNAPSHOT")
    compile("redis.clients:jedis:2.8.0")

    compile("org.springframework.security.oauth:spring-security-oauth2")

    //required for deserializing jpa objects which are in the spring-session
    compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final")
    compile("org.hibernate:hibernate-entitymanager:4.3.7.Final")

    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda")
}
